{"ast":null,"code":"var _jsxFileName = \"/Users/rana/Downloads/noteManagementSystem-main/frontend/src/components/Register.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState, useEffect } from \"react\";\nimport { faCheck, faTimes, faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport axios from '../api/axios'; // Import the Axios instance with the correct base URL\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst user_regex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n/*[a-zA-Z0-9._%+-]+: (before the \"@\" symbol). It allows for one or more occurrences of alphanumeric characters (a-z, A-Z, 0-9), as well as certain special characters (._%+-).\n\n[a-zA-Z0-9.-]+: domain name the email. It allows for one or more occurrences of alphanumeric characters (a-z, A-Z, 0-9), as well as periods and hyphens.\n\n\\.: dot (.) \n\n[a-zA-Z]{2,}: This part matches the top-level domain, minimum length of 2 characters .\n\n$: end of the input string.*/\n\nconst pass_regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/;\n/*?= is a positive lookahead, a type of zero-width assertion. captured match must be followed by whatever is within the parentheses but that part isn't captured.\n\n(?=.*[a-z]) - It ensures that the string contains at least one lowercase letter (a-z).\n\n(?=.*[A-Z]) - It ensures that the string contains at least one uppercase letter (A-Z).\n\n(?=.*[0-9]) -Ensures that the string contains at least one digit (0-9).\n\n(?=.*[!@#$%]) -Ensures that the string contains at least one special character from the set [!@#$%].*/\n\nconst REGISTER_URL = 'http://localhost:5000/register';\n//end point backend api\n\nconst Register = () => {\n  _s();\n  const userRef = useRef(); /*focus user input*/\n  const errRef = useRef();\n  const [mail, setMail] = useState(''); /*user input*/\n  const [validName, setValidName] = useState(false); /*after test*/\n  const [userFocus, setUserFocus] = useState(false); //focus user part\n\n  const [pass, setPass] = useState('');\n  const [validPass, setValidPass] = useState(false);\n  const [passFocus, setPassFocus] = useState(false);\n  const [matchPass, setMatchPass] = useState('');\n  const [validMatch, setValidMatch] = useState(false);\n  const [matchFocus, setMatchFocus] = useState(false);\n  const [errMsg, setErrMsg] = useState('');\n  const [success, setSuccess] = useState(false);\n\n  /*focus when component load*/\n  useEffect(() => {\n    userRef.current.focus();\n  }, []);\n\n  /*to validate user*/\n  useEffect(() => {\n    setValidName(user_regex.test(mail));\n  }, [mail]);\n\n  /*to validate password*/\n  useEffect(() => {\n    setValidPass(pass_regex.test(pass));\n    setValidMatch(pass === matchPass);\n  }, [pass, matchPass]); //sync\n\n  /*Error Message*/\n  useEffect(() => {\n    setErrMsg('');\n  }, [mail, pass, matchPass]); /*once user change one of the info, error meaasge come out*/\n\n  //submit the form==============================\n  const handleSubmit = async e => {\n    e.preventDefault(); // to prevent hack by default submit form\n    //to prevent subimit button can be pressed\n    const v1 = user_regex.test(mail);\n    const v2 = pass_regex.test(pass);\n    if (!v1 || !v2) {\n      setErrMsg(\"Invalid Entry\");\n      return;\n    }\n    try {\n      const response = await axios.post(REGISTER_URL, JSON.stringify({\n        mail,\n        pass\n      }), {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        withCredentials: true\n      });\n      console.log(response === null || response === void 0 ? void 0 : response.data); //respone from server\n      console.log(response === null || response === void 0 ? void 0 : response.accessToken);\n      console.log(JSON.stringify(response));\n      setSuccess(true);\n      //clear state and controlled inputs\n      //need value attrib on inputs for this\n      setMail('');\n      setPass('');\n      setMatchPass('');\n    } catch (err) {\n      var _err$response;\n      if (!(err !== null && err !== void 0 && err.response)) {\n        setErrMsg('No Server Response');\n      } else if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 409) {\n        //conflict between the requested resources and the current state of the server \n        setErrMsg('Email Already Exist!');\n      } else {\n        setErrMsg('Registration Failed');\n      }\n      errRef.current.focus(); //focus err screen reader \n    }\n  };\n\n  /*============================================================ */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"loginregis\",\n    children: success ? /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: 'green'\n        },\n        children: \"Success!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"line\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          style: {\n            color: 'green',\n            textDecoration: 'underline'\n          },\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"lgsec\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        ref: errRef,\n        className: errMsg ? \"errmsg\" : \"offscreen\",\n        \"aria-live\": \"assertive\",\n        children: errMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"regis\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: [\"E-mail:\", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCheck,\n            className: validName ? \"valid\" : \"hide\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimes,\n            className: validName || !mail ? \"hide\" : \"invalid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"email\",\n          ref: userRef /*focus input*/,\n          autoComplete: \"off\" /*didnt display previous input value*/,\n          onChange: e => setMail(e.target.value) /*user state*/,\n          value: mail,\n          required: true /*to specify input must be filled out before submitting*/,\n          \"aria-invalid\": validName ? \"false\" : \"true\" /*to determine valid input before submit\n                                                       dont have validname, if have validn name will return true*/,\n          \"aria-describedby\": \"uidnote\" /*provide additional information read by screen readers, used to read what type and ariainvalid*/,\n          onFocus: () => setUserFocus(true),\n          onBlur: () => setUserFocus(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"uidnote\",\n          className: userFocus && mail && !validName ? \"instructions\" : \"offscreen\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faInfoCircle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: [\"Password:\", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCheck,\n            className: validPass ? \"valid\" : \"hide\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimes,\n            className: validPass || !pass ? \"hide\" : \"invalid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          onChange: e => setPass(e.target.value),\n          value: pass,\n          required: true,\n          \"aria-invalid\": validPass ? \"false\" : \"true\",\n          \"aria-describedby\": \"passnote\",\n          onFocus: () => setPassFocus(true),\n          onBlur: () => setPassFocus(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"passdnote\",\n          className: passFocus && !validPass ? \"instructions\" : \"offscreen\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faInfoCircle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 29\n          }, this), \"8 to 24 characters.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 48\n          }, this), \"Must include uppercase and lowercase letters, a number and a special character.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 108\n          }, this), \"Allowed special characters: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-label\": \"exclamation mark\",\n            children: \"!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 57\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-label\": \"at symbol\",\n            children: \"@\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 102\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-label\": \"hashtag\",\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 140\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-label\": \"dollar sign\",\n            children: \"$\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 176\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-label\": \"percent\",\n            children: \"%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 216\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirm_pass\",\n          children: [\"Confirm Password:\", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCheck,\n            className: validMatch && matchPass ? \"valid\" : \"hide\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimes,\n            className: validMatch || !matchPass ? \"hide\" : \"invalid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirm_pass\",\n          onChange: e => setMatchPass(e.target.value),\n          value: matchPass,\n          required: true,\n          \"aria-invalid\": validMatch ? \"false\" : \"true\",\n          \"aria-describedby\": \"confirmnote\",\n          onFocus: () => setMatchFocus(true),\n          onBlur: () => setMatchFocus(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"confirmnote\",\n          className: matchFocus && !validMatch ? \"instructions\" : \"offscreen\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faInfoCircle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 29\n          }, this), \"Must match the first password input field.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !validName || !validPass || !validMatch ? true : false,\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"remind\",\n        children: [\"Already have an account?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 49\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"line\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            style: {\n              color: 'white',\n              textDecoration: 'underline'\n            },\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 9\n  }, this);\n};\n_s(Register, \"fiacEX/Og/RY6AiYWph8Wf+91bk=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useRef","useState","useEffect","faCheck","faTimes","faInfoCircle","FontAwesomeIcon","axios","Link","jsxDEV","_jsxDEV","user_regex","pass_regex","REGISTER_URL","Register","_s","userRef","errRef","mail","setMail","validName","setValidName","userFocus","setUserFocus","pass","setPass","validPass","setValidPass","passFocus","setPassFocus","matchPass","setMatchPass","validMatch","setValidMatch","matchFocus","setMatchFocus","errMsg","setErrMsg","success","setSuccess","current","focus","test","handleSubmit","e","preventDefault","v1","v2","response","post","JSON","stringify","headers","withCredentials","console","log","data","accessToken","err","_err$response","status","id","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","className","to","textDecoration","ref","onSubmit","htmlFor","icon","type","autoComplete","onChange","target","value","required","onFocus","onBlur","disabled","_c","$RefreshReg$"],"sources":["/Users/rana/Downloads/noteManagementSystem-main/frontend/src/components/Register.js"],"sourcesContent":["import { useRef, useState, useEffect} from \"react\";\nimport { faCheck, faTimes, faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport axios from '../api/axios'; // Import the Axios instance with the correct base URL\nimport { Link } from \"react-router-dom\";\n\n\n\nconst user_regex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n/*[a-zA-Z0-9._%+-]+: (before the \"@\" symbol). It allows for one or more occurrences of alphanumeric characters (a-z, A-Z, 0-9), as well as certain special characters (._%+-).\n\n[a-zA-Z0-9.-]+: domain name the email. It allows for one or more occurrences of alphanumeric characters (a-z, A-Z, 0-9), as well as periods and hyphens.\n\n\\.: dot (.) \n\n[a-zA-Z]{2,}: This part matches the top-level domain, minimum length of 2 characters .\n\n$: end of the input string.*/\n\nconst pass_regex= /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/;\n/*?= is a positive lookahead, a type of zero-width assertion. captured match must be followed by whatever is within the parentheses but that part isn't captured.\n\n(?=.*[a-z]) - It ensures that the string contains at least one lowercase letter (a-z).\n\n(?=.*[A-Z]) - It ensures that the string contains at least one uppercase letter (A-Z).\n\n(?=.*[0-9]) -Ensures that the string contains at least one digit (0-9).\n\n(?=.*[!@#$%]) -Ensures that the string contains at least one special character from the set [!@#$%].*/\n\nconst REGISTER_URL = 'http://localhost:5000/register';\n//end point backend api\n\n\nconst Register = () => {\n    const userRef = useRef(); /*focus user input*/\n    const errRef = useRef();\n\n    const [mail, setMail] = useState(''); /*user input*/\n    const [validName, setValidName] = useState(false); /*after test*/\n    const [userFocus, setUserFocus] = useState(false); //focus user part\n\n    const [pass, setPass] = useState('');\n    const [validPass, setValidPass] = useState(false);\n    const [passFocus, setPassFocus] = useState(false);\n\n    const [matchPass, setMatchPass] = useState('');\n    const [validMatch, setValidMatch] = useState(false);\n    const [matchFocus, setMatchFocus] = useState(false);\n\n    const [errMsg, setErrMsg] = useState('');\n    const [success, setSuccess] = useState(false);\n\n    /*focus when component load*/\n    useEffect(() => {\n        userRef.current.focus();\n    }, [])\n\n    /*to validate user*/\n    useEffect(() => {\n        setValidName(user_regex.test(mail));\n    }, [mail])\n\n    /*to validate password*/\n    useEffect(() => {\n        setValidPass(pass_regex.test(pass));\n        setValidMatch(pass === matchPass);\n    }, [pass, matchPass]) //sync\n\n    /*Error Message*/\n    useEffect(() => {\n        setErrMsg('');\n    }, [mail, pass, matchPass]) /*once user change one of the info, error meaasge come out*/\n\n\n    \n    //submit the form==============================\n    const handleSubmit = async (e) => {\n        e.preventDefault();// to prevent hack by default submit form\n        //to prevent subimit button can be pressed\n        const v1 = user_regex.test(mail);\n        const v2 = pass_regex.test(pass);\n        if (!v1 || !v2) {\n            setErrMsg(\"Invalid Entry\");\n            return;\n        }\n        try {\n            const response = await axios.post(REGISTER_URL,\n                JSON.stringify({ mail, pass }),\n                {\n                    headers: { 'Content-Type': 'application/json' },\n                    withCredentials: true\n                }\n            );\n            console.log(response?.data); //respone from server\n            console.log(response?.accessToken);\n            console.log(JSON.stringify(response))\n            setSuccess(true);\n            //clear state and controlled inputs\n            //need value attrib on inputs for this\n            setMail('');\n            setPass('');\n            setMatchPass('');\n        } catch (err) {\n            if (!err?.response) {\n                setErrMsg('No Server Response');\n            } else if (err.response?.status === 409) {\n                //conflict between the requested resources and the current state of the server \n                setErrMsg('Email Already Exist!');\n            } else {\n                setErrMsg('Registration Failed')\n            }\n            errRef.current.focus(); //focus err screen reader \n        }\n    }\n\n\n/*============================================================ */\n    return (\n        <div id=\"loginregis\">\n        {/*if have a acc, if not register*/}\n            {success ? (\n                <section>\n                    <h1 style={{color:'green'}}>Success!</h1>\n                    <span className=\"line\">\n                            <Link to=\"/login\" style={{color:'green', textDecoration:'underline'}}>Sign In</Link>\n                        </span>\n                </section>\n            ) : (\n                <section id=\"lgsec\">\n                    <p ref={errRef} className={errMsg ? \"errmsg\" : \"offscreen\"} aria-live=\"assertive\">{errMsg}</p> {/*content within that element should be announced to screen readers immediately and interrupt any ongoing speech*/}\n                    <h1 className=\"regis\">Register</h1>\n                    <form onSubmit = {handleSubmit}>\n{/*====================user field===========================*/}\n                        <label htmlFor=\"email\">\n                            E-mail:\n                             {/*to check if not valid, hide the green mark, should be true after test the user regex, display green mark*/} \n                            <FontAwesomeIcon icon={faCheck}\n                            className={validName ? \"valid\" : \"hide\"} />\n                             {/*by default is false, if valid true hide red mark, or user state empty, if it is not empty, hide red mark*/}\n                            <FontAwesomeIcon icon={faTimes} className={validName || !mail ? \"hide\" : \"invalid\"} />\n                        </label>\n                        <input\n                            type=\"text\"\n                            id=\"email\"\n                            ref={userRef}/*focus input*/\n                            autoComplete=\"off\"/*didnt display previous input value*/\n                            onChange={(e) => setMail(e.target.value)}/*user state*/\n                            value={mail}\n                            required/*to specify input must be filled out before submitting*/\n                            aria-invalid={validName ? \"false\" : \"true\"}/*to determine valid input before submit\n                            dont have validname, if have validn name will return true*/\n                            aria-describedby=\"uidnote\"/*provide additional information read by screen readers, used to read what type and ariainvalid*/\n                            onFocus={() => setUserFocus(true)}\n                            onBlur={() => setUserFocus(false)}\n                        />\n                        {/*aria described by set requirement*/}\n                        {/*if userfocus true, user state exist not  empty, not a valid name*/}\n\n                        {/*display condition let user know how to set username*/}\n                        <p id=\"uidnote\" className={userFocus && mail && !validName ? \"instructions\" : \"offscreen\"}>\n                            <FontAwesomeIcon icon={faInfoCircle} />\n                            \n                        </p>\n\n{/*====================password field=================*/}\n                        <label htmlFor=\"password\">\n                            Password:\n                             {/*if pass valid value is false, hide green check mark; if true valid green mark*/}\n                            <FontAwesomeIcon icon={faCheck} className={validPass ? \"valid\" : \"hide\"} />\n                            {/*if validpass false or pass is empty, invalid red mark */}\n                            <FontAwesomeIcon icon={faTimes} className={validPass || !pass ? \"hide\" : \"invalid\"} />\n                        </label>\n                        <input\n                            type=\"password\"\n                            id=\"password\"\n                            onChange={(e) => setPass(e.target.value)}\n                            value={pass}\n                            required\n                            aria-invalid={validPass ? \"false\" : \"true\"}\n                            aria-describedby=\"passnote\"\n                            onFocus={() => setPassFocus(true)}\n                            onBlur={() => setPassFocus(false)}\n                        />\n                        {/*if focus on pass field and not valid pass */}\n                        <p id=\"passdnote\" className={passFocus && !validPass ? \"instructions\" : \"offscreen\"}>\n                        \n                            <FontAwesomeIcon icon={faInfoCircle} />\n                            8 to 24 characters.<br />\n                            Must include uppercase and lowercase letters, a number and a special character.<br />\n                            Allowed special characters: <span aria-label=\"exclamation mark\">!</span> <span aria-label=\"at symbol\">@</span> <span aria-label=\"hashtag\">#</span> <span aria-label=\"dollar sign\">$</span> <span aria-label=\"percent\">%</span>\n                        </p>\n\n{/*====================confirm pass==================*/}\n                        <label htmlFor=\"confirm_pass\">\n                            Confirm Password:\n                            {/*if valid match value is false where matchpass not same as pass and matchPass should have input , hide green mark; else the valid match value become true will display green mark*/}\n                            <FontAwesomeIcon icon={faCheck} className={validMatch && matchPass ? \"valid\" : \"hide\"} />\n\n                            {/*if valid match value is false or matchpass is blank , invalid */}\n                            <FontAwesomeIcon icon={faTimes} className={validMatch || !matchPass ? \"hide\" : \"invalid\"} />\n                        </label>\n                        <input\n                            type=\"password\"\n                            id=\"confirm_pass\"\n                            onChange={(e) => setMatchPass(e.target.value)}\n                            value={matchPass}\n                            required\n                            aria-invalid={validMatch ? \"false\" : \"true\"}\n                            aria-describedby=\"confirmnote\"\n                            onFocus={() => setMatchFocus(true)}\n                            onBlur={() => setMatchFocus(false)}\n                        />\n                        <p id=\"confirmnote\" className={matchFocus && !validMatch ? \"instructions\" : \"offscreen\"}>\n                            <FontAwesomeIcon icon={faInfoCircle} />\n                            Must match the first password input field.\n                        </p>\n\n{/*===============Sign up button===================== */}\n                        {/*disable until all condition fulfill to prevents the button from being clicked\n                        one of this true then can click*/}\n                        <button disabled={!validName || !validPass || !validMatch ? true : false}>Sign Up</button>\n                    </form>\n                    <p id='remind'>\n                        Already have an account?<br />\n                        <span className=\"line\">\n                            <Link to=\"/login\" style={{color:'white', textDecoration:'underline'}}>Sign In</Link>\n                        </span>\n                    </p>\n                </section>\n            )}\n        </div>\n    )\n}\n\nexport default Register;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}